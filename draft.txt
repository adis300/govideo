//var templates = template.Must(template.ParseFiles("view/home.html", "view/room.html"))
var allConnections map[*websocket.Conn]bool

func sendAll(msg []byte) {
	for conn := range allConnections {
		if err := conn.WriteMessage(websocket.TextMessage, msg); err != nil {
			delete(allConnections, conn)
			return
		}
	}
}

//Echo is a function that replies to websocket
func websocketHandler(w http.ResponseWriter, r *http.Request) {
	conn, err := websocket.Upgrade(w, r, nil, 1024, 1024)

	

	allConnections[conn] = true

	for {
		_, msg, err := conn.ReadMessage()
		if err != nil {
			return
		}
		log.Println(string(msg))
		if err := conn.WriteMessage(websocket.TextMessage, msg); err != nil {
			return
		}
		sendAll(msg)
	}

}


func broadCast(meeting *Meeting) bool {
	for _, u := range meeting.Users {
		log.Println(u)
		return false
	}
	return false
}
